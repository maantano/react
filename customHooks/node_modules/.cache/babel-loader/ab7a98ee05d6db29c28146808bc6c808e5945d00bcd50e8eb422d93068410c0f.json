{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;\n\n// import { useCallback, useState } from \"react\";\n\n// const useHttp = (requestConfig, applyData) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const sendRequest = useCallback(async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(requestConfig.url, {\n//         method: requestConfig.method ? requestConfig.method : \"GET\",\n//         headers: requestConfig.headers ? requestConfig.headers : {},\n//         body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Request failed!\");\n//       }\n\n//       const data = await response.json();\n\n//       applyData(data);\n//     } catch (err) {\n//       setError(err.message || \"Something went wrong!\");\n//     }\n//     setIsLoading(false);\n//   }, [requestConfig, applyData]);\n//   return {\n//     isLoading,\n//     error,\n//     sendRequest,\n//   };\n// };\n// export default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/mingyeong-eon/Downloads/react/customHooks/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\nexport default useHttp;\n\n// import { useCallback, useState } from \"react\";\n\n// const useHttp = (requestConfig, applyData) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const sendRequest = useCallback(async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(requestConfig.url, {\n//         method: requestConfig.method ? requestConfig.method : \"GET\",\n//         headers: requestConfig.headers ? requestConfig.headers : {},\n//         body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Request failed!\");\n//       }\n\n//       const data = await response.json();\n\n//       applyData(data);\n//     } catch (err) {\n//       setError(err.message || \"Something went wrong!\");\n//     }\n//     setIsLoading(false);\n//   }, [requestConfig, applyData]);\n//   return {\n//     isLoading,\n//     error,\n//     sendRequest,\n//   };\n// };\n// export default useHttp;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,WAAW,GAAGR,WAAW,CAAC,OAAOS,aAAa,EAAEC,SAAS,KAAK;IAClEL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAG,EAAE;QAC9CC,MAAM,EAAEL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEN,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACM,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEP,aAAa,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCZ,SAAS,CAACW,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACLD,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CA/BID,OAAO;AAgCb,eAAeA,OAAO;;AAEtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}