{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;\n\n// import { useCallback, useState } from \"react\";\n\n// const useHttp = (requestConfig, applyData) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const sendRequest = useCallback(async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(requestConfig.url, {\n//         method: requestConfig.method ? requestConfig.method : \"GET\",\n//         headers: requestConfig.headers ? requestConfig.headers : {},\n//         body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Request failed!\");\n//       }\n\n//       const data = await response.json();\n\n//       applyData(data);\n//     } catch (err) {\n//       setError(err.message || \"Something went wrong!\");\n//     }\n//     setIsLoading(false);\n//   }, [requestConfig, applyData]);\n//   return {\n//     isLoading,\n//     error,\n//     sendRequest,\n//   };\n// };\n// export default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/mingyeong-eon/Downloads/react/customHooks/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = (applyData) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(\n    async (requestConfig) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(requestConfig.url, {\n          method: requestConfig.method ? requestConfig.method : \"GET\",\n          headers: requestConfig.headers ? requestConfig.headers : {},\n          body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Request failed!\");\n        }\n\n        const data = await response.json();\n\n        applyData(data);\n      } catch (err) {\n        setError(err.message || \"Something went wrong!\");\n      }\n      setIsLoading(false);\n    },\n    [applyData]\n  );\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\nexport default useHttp;\n\n// import { useCallback, useState } from \"react\";\n\n// const useHttp = (requestConfig, applyData) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const sendRequest = useCallback(async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(requestConfig.url, {\n//         method: requestConfig.method ? requestConfig.method : \"GET\",\n//         headers: requestConfig.headers ? requestConfig.headers : {},\n//         body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Request failed!\");\n//       }\n\n//       const data = await response.json();\n\n//       applyData(data);\n//     } catch (err) {\n//       setError(err.message || \"Something went wrong!\");\n//     }\n//     setIsLoading(false);\n//   }, [requestConfig, applyData]);\n//   return {\n//     isLoading,\n//     error,\n//     sendRequest,\n//   };\n// };\n// export default useHttp;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAGT,WAAW,CAC7B,MAAOU,aAAa,IAAK;IACvBJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,aAAa,CAACG,GAAG,EAAE;QAC9CC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEL,aAAa,CAACK,OAAO,GAAGL,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEN,aAAa,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,aAAa,CAACM,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCnB,SAAS,CAACkB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACH,SAAS,CACZ,CAAC;EACD,OAAO;IACLE,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAlCIF,OAAO;AAmCb,eAAeA,OAAO;;AAEtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}